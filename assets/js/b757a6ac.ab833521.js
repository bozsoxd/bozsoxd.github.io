"use strict";(self.webpackChunkrefernces_docs=self.webpackChunkrefernces_docs||[]).push([[463],{2039:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"ICH-detection","title":"Intracranial hemorrhage detection with machine learning","description":"Description","source":"@site/docs/ICH-detection.md","sourceDirName":".","slug":"/ICH-detection","permalink":"/ICH-detection","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"title":"Intracranial hemorrhage detection with machine learning","sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Welcome","permalink":"/"},"next":{"title":"Android Workout Tracker","permalink":"/android-project"}}');var n=i(4848),r=i(8453);const a={title:"Intracranial hemorrhage detection with machine learning",sidebar_position:2},o=void 0,c={},d=[{value:"Description",id:"description",level:2},{value:"Hemorrhage types",id:"hemorrhage-types",level:2},{value:"Results",id:"results",level:2},{value:"Projects Content",id:"projects-content",level:2}];function l(e){const t={h2:"h2",img:"img",li:"li",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h2,{id:"description",children:"Description"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"My goal was to create a software solution that would help radiologists in emergency trauma care to determine from CT scans of the brain of patients with head injuries whether there is a brain hemorrhage on the scan."}),"\n",(0,n.jsx)(t.li,{children:"For this, I have created an artificial intelligence, deep learning solution based on a convolutional neural network. It receives DICOM format image slices as input, which have been annotated by radiologists with the presence and type of bleeding. These DICOM slices are received by the network as 3-channel image files, and their label is an n-class binary vector. I developed and trained this network with different parameters and tried to create a version with it that has the highest possible accuracy metric."}),"\n",(0,n.jsx)(t.li,{children:"I evaluated the network from several points of view and created a demo application for it for testability, where it can be tested and tried with its own brain CT scan images, which foreshadows the usability of various own databases."}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"hemorrhage-types",children:"Hemorrhage types"}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"ICH types",src:i(3870).A+"",width:"1106",height:"610"})}),"\n",(0,n.jsx)(t.h2,{id:"results",children:"Results"}),"\n",(0,n.jsx)(t.p,{children:"After the last training of the model, it was possible to achieve sufficiently high accuracy for the model to be considered reliable even in real-world use. The minimum expectation from my side towards the network was that it could correctly determine the output in at least eighty percent of the cases, which was achieved. In the data set, the two most common positive labels are intravenricular and any, which has a visible consequence that these two classes have the highest real accuracy. The epidural value is so high because it almost always takes a zero value, which the model quickly learns, so it only fails to find those rare cases where it is positive."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"ICH metrics",src:i(7994).A+"",width:"648",height:"710"})}),"\n",(0,n.jsx)(t.h2,{id:"projects-content",children:"Projects Content"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"File(s)"}),(0,n.jsx)(t.th,{children:"about"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"csv_reader.py"}),(0,n.jsx)(t.td,{children:"Converts the file containing the original labels into a more optimal format"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"dataset.py"}),(0,n.jsx)(t.td,{children:"The dataset consisting of images and labels"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"dcm_reader.py"}),(0,n.jsx)(t.td,{children:"Used to read DICOM files and convert them into three-channel images"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"dcm_sampler.py"}),(0,n.jsx)(t.td,{children:"A sampler whose task is to balance the input dataset"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"id_vectors.csv"}),(0,n.jsx)(t.td,{children:"The converted label file"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"model_test.pth"}),(0,n.jsx)(t.td,{children:"The already trained model."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"model.py"}),(0,n.jsx)(t.td,{children:"Pytorch based CNN classifier model"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"stage_2_train.csv"}),(0,n.jsx)(t.td,{children:"Original input label file."})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"test.py"}),(0,n.jsx)(t.td,{children:"A file that summarizes the functions for testing"})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"train.py"}),(0,n.jsx)(t.td,{children:"Used to train the network"})]})]})]})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},7994:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/ich-metrics-d66c6b8500139844d4b6b0c173f9cd83.png"},3870:(e,t,i)=>{i.d(t,{A:()=>s});const s=i.p+"assets/images/ich-types-009302af562320dd5d446c59a2355bcb.png"},8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>o});var s=i(6540);const n={},r=s.createContext(n);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);