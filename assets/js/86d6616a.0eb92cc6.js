"use strict";(self.webpackChunkrefernces_docs=self.webpackChunkrefernces_docs||[]).push([[671],{5716:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>h,frontMatter:()=>i,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"AI-projects","title":"Connect4 MiniMax algorithm","description":"This is a minimax algorithm designed to play the game of Connect Four. The algorithm searches to a depth of 9 and uses alpha-beta pruning for better performance. This ensures a very high probability of winning, as the algorithm is able to look ahead several moves and choose the best possible move. The minimax algorithm is a classic game-playing algorithm that can be used to play a variety of games, including chess, checkers, and tic-tac-toe. 1  It works by recursively exploring the game tree and choosing the move that leads to the best possible outcome for the player. Alpha-beta pruning is a technique that can be used to improve the performance of the minimax algorithm by eliminating branches of the game tree that are not worth exploring.","source":"@site/docs/AI-projects.md","sourceDirName":".","slug":"/AI-projects","permalink":"/AI-projects","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":6,"frontMatter":{"title":"Connect4 MiniMax algorithm","sidebar_position":6},"sidebar":"tutorialSidebar","previous":{"title":"Web application","permalink":"/web-app"},"next":{"title":"Mankala Boardgame in Java","permalink":"/mankala"}}');var r=a(4848),o=a(8453);a(1470),a(9365);const i={title:"Connect4 MiniMax algorithm",sidebar_position:6},s=void 0,l={},u=[{value:"Code fragments",id:"code-fragments",level:2}];function c(e){const t={admonition:"admonition",code:"code",h2:"h2",p:"p",pre:"pre",strong:"strong",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(t.p,{children:["This is a ",(0,r.jsx)(t.strong,{children:"minimax algorithm"})," designed to play the game of Connect Four. The algorithm searches to a depth of 9 and uses ",(0,r.jsx)(t.strong,{children:"alpha-beta"})," pruning for better performance. This ensures a very high probability of winning, as the algorithm is able to look ahead several moves and choose the best possible move. The minimax algorithm is a classic game-playing algorithm that can be used to play a variety of games, including chess, checkers, and tic-tac-toe. 1  It works by recursively exploring the game tree and choosing the move that leads to the best possible outcome for the player. Alpha-beta pruning is a technique that can be used to improve the performance of the minimax algorithm by eliminating branches of the game tree that are not worth exploring."]}),"\n",(0,r.jsx)(t.h2,{id:"code-fragments",children:"Code fragments"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",metastring:'title="max algorithm"',children:"if(maxPlayer){\n            int value = -9999999;\n            int column = validSteps.get(new Random().nextInt(validSteps.size()));\n            for(int i: validSteps){\n                Board boardCopy = new Board(board);\n                boardCopy.step(this.playerIndex, i);\n                int newScore = miniMax(boardCopy, depth-1, alpha, beta, false)[1];\n                if(newScore > value){\n                    value = newScore;\n                    column = i;\n                }\n                //highlight-start\n                alpha = max(alpha, value);\n                if(alpha >= beta){\n                    break;\n                }\n                //highlight-end\n            }\n            return new int[]{column, value};\n        }\n"})}),"\n",(0,r.jsx)(t.admonition,{type:"note",children:(0,r.jsx)(t.p,{children:"The mentioned alpha/beta pruning can be seen in the marked section."})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-java",metastring:'title="Score calculation"',children:"private int scoreOfFour(int[] four, int playerIndex){\n        int score = 0;\n        if(outOfFour(four, playerIndex) == 4) score += 100;\n        else if(outOfFour(four, playerIndex) == 3 && outOfFour(four, 0) == 1) score += 5;\n        else if(outOfFour(four, playerIndex) == 2 && outOfFour(four, 0) == 2) score += 2;\n        if(outOfFour(four, 1) == 3 && outOfFour(four, 0) == 1) score -= 100;\n        else if(outOfFour(four, 1) == 2 && outOfFour(four, 0) == 2) score -= 2;\n        return score;\n    }\n"})})]})}function h(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},9365:(e,t,a)=>{a.d(t,{A:()=>i});a(6540);var n=a(4164);const r={tabItem:"tabItem_Ymn6"};var o=a(4848);function i(e){let{children:t,hidden:a,className:i}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,n.A)(r.tabItem,i),hidden:a,children:t})}},1470:(e,t,a)=>{a.d(t,{A:()=>I});var n=a(6540),r=a(4164),o=a(3104),i=a(6347),s=a(205),l=a(7485),u=a(1682),c=a(679);function h(e){return n.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,n.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function d(e){const{values:t,children:a}=e;return(0,n.useMemo)((()=>{const e=t??function(e){return h(e).map((e=>{let{props:{value:t,label:a,attributes:n,default:r}}=e;return{value:t,label:a,attributes:n,default:r}}))}(a);return function(e){const t=(0,u.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,a])}function p(e){let{value:t,tabValues:a}=e;return a.some((e=>e.value===t))}function m(e){let{queryString:t=!1,groupId:a}=e;const r=(0,i.W6)(),o=function(e){let{queryString:t=!1,groupId:a}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!a)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return a??null}({queryString:t,groupId:a});return[(0,l.aZ)(o),(0,n.useCallback)((e=>{if(!o)return;const t=new URLSearchParams(r.location.search);t.set(o,e),r.replace({...r.location,search:t.toString()})}),[o,r])]}function f(e){const{defaultValue:t,queryString:a=!1,groupId:r}=e,o=d(e),[i,l]=(0,n.useState)((()=>function(e){let{defaultValue:t,tabValues:a}=e;if(0===a.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!p({value:t,tabValues:a}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${a.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=a.find((e=>e.default))??a[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[u,h]=m({queryString:a,groupId:r}),[f,b]=function(e){let{groupId:t}=e;const a=function(e){return e?`docusaurus.tab.${e}`:null}(t),[r,o]=(0,c.Dv)(a);return[r,(0,n.useCallback)((e=>{a&&o.set(e)}),[a,o])]}({groupId:r}),g=(()=>{const e=u??f;return p({value:e,tabValues:o})?e:null})();(0,s.A)((()=>{g&&l(g)}),[g]);return{selectedValue:i,selectValue:(0,n.useCallback)((e=>{if(!p({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),h(e),b(e)}),[h,b,o]),tabValues:o}}var b=a(2303);const g={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var v=a(4848);function x(e){let{className:t,block:a,selectedValue:n,selectValue:i,tabValues:s}=e;const l=[],{blockElementScrollPositionUntilNextRender:u}=(0,o.a_)(),c=e=>{const t=e.currentTarget,a=l.indexOf(t),r=s[a].value;r!==n&&(u(t),i(r))},h=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const a=l.indexOf(e.currentTarget)+1;t=l[a]??l[0];break}case"ArrowLeft":{const a=l.indexOf(e.currentTarget)-1;t=l[a]??l[l.length-1];break}}t?.focus()};return(0,v.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":a},t),children:s.map((e=>{let{value:t,label:a,attributes:o}=e;return(0,v.jsx)("li",{role:"tab",tabIndex:n===t?0:-1,"aria-selected":n===t,ref:e=>l.push(e),onKeyDown:h,onClick:c,...o,className:(0,r.A)("tabs__item",g.tabItem,o?.className,{"tabs__item--active":n===t}),children:a??t},t)}))})}function y(e){let{lazy:t,children:a,selectedValue:o}=e;const i=(Array.isArray(a)?a:[a]).filter(Boolean);if(t){const e=i.find((e=>e.props.value===o));return e?(0,n.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,v.jsx)("div",{className:"margin-top--md",children:i.map(((e,t)=>(0,n.cloneElement)(e,{key:t,hidden:e.props.value!==o})))})}function w(e){const t=f(e);return(0,v.jsxs)("div",{className:(0,r.A)("tabs-container",g.tabList),children:[(0,v.jsx)(x,{...t,...e}),(0,v.jsx)(y,{...t,...e})]})}function I(e){const t=(0,b.A)();return(0,v.jsx)(w,{...e,children:h(e.children)},String(t))}},8453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>s});var n=a(6540);const r={},o=n.createContext(r);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);